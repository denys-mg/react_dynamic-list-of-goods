{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","ok","json","Promise","reject","concat","status","GoodsList","React","memo","_ref","goods","_jsx","children","map","good","style","color","name","id","Loader","className","App","_useState","useState","_useState2","_slicedToArray","goodsFromServer","setGoodsFromServer","_useState3","_useState4","requestedGoods","setRequestedGoods","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","errorMessage","setErrorMessage","handleBtnClick","requestBy","setTimeout","useEffect","length","catch","finally","_jsxs","type","onClick","sort","a","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAKO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,GAADC,OAAKL,EAASM,OAAM,6BAIrC,I,OCPMC,EAA6BC,IAAMC,MAAK,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAC3DC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAOF,EAAKE,OAAQJ,SAE5BE,EAAKG,MAJDH,EAAKI,YCXLC,EAAS,WAAH,OACjBR,cAAA,OAAKS,UAAU,YCOJC,EAAgB,WAC3B,IAAAC,EAA8CC,mBAAwB,MAAKC,EAAAC,YAAAH,EAAA,GAApEI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,EAA4CL,mBAA0B3B,GAAOiC,EAAAJ,YAAAG,EAAA,GAAtEE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAkCT,oBAAS,GAAKU,EAAAR,YAAAO,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAwCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAiB,SAACC,GACtBN,GAAa,GACbO,YAAW,kBAAMX,EAAkBU,KAAY,MAgBjD,OAbAE,qBAAU,WACRb,EACGhC,MAAK,SAAAY,GACJiB,EAAmBjB,GAEf4B,EAAaM,OAAS,GACxBL,EAAgB,OAGnBM,MAAMN,GACNO,SAAQ,kBAAMX,GAAa,QAC7B,CAACL,IAGFiB,eAAA,OAAK3B,UAAU,MAAKR,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEqC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMT,EAAe5C,MAAUgB,SACzC,mBAIDD,cAAA,UACEqC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMT,EHhCd5C,IACJE,MAAK,SAAAY,GAAK,OAAIA,EACZwC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAElC,KAAKoC,cAAcD,EAAEnC,SACtCqC,MAAM,EAAG,QG6BmC1C,SAC5C,uBAIDD,cAAA,UACEqC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMT,EHjCd5C,IACJE,MAAK,SAAAY,GAAK,OAAIA,EAAM6C,QAAO,SAAAzC,GAAI,MAAmB,QAAfA,EAAKE,cGgCQJ,SAC9C,mBAKCsB,GACEvB,cAACQ,EAAM,KAKRe,GAAaI,GACZ3B,cAAA,KAAAC,SACG0B,KAMJJ,IAAcI,GAA4C,KAAb,OAAfZ,QAAe,IAAfA,OAAe,EAAfA,EAAiBkB,SAC3CjC,cAAA,KAAAC,SAAG,yBAIPsB,IAAcI,GAAgBZ,GAC1BA,EAAgBkB,OAAS,GACvBjC,cAACL,EAAS,CAACI,MAAOgB,QC/EjC8B,IAASC,OACP9C,cAACU,EAAG,IACJqC,SAASC,eAAe,U","file":"static/js/main.2499d327.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject((`${response.status}: Can't request goods`));\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","export const Loader = () => (\n  <div className=\"loader\" />\n);\n","import React, { useEffect, useState } from 'react';\nimport './styles/index.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\nimport { GoodsList } from './components/GoodsList';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [goodsFromServer, setGoodsFromServer] = useState<Good[] | null>(null);\n  const [requestedGoods, setRequestedGoods] = useState<Promise<Good[]>>(getAll);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleBtnClick = (requestBy: Promise<Good[]>) => {\n    setIsLoading(true);\n    setTimeout(() => setRequestedGoods(requestBy), 2000);\n  };\n\n  useEffect(() => {\n    requestedGoods\n      .then(goods => {\n        setGoodsFromServer(goods);\n\n        if (errorMessage.length > 0) {\n          setErrorMessage('');\n        }\n      })\n      .catch(setErrorMessage)\n      .finally(() => setIsLoading(false));\n  }, [requestedGoods]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleBtnClick(getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleBtnClick(get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleBtnClick(getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      {\n        isLoading && (\n          <Loader />\n        )\n      }\n\n      {\n        !isLoading && errorMessage && (\n          <p>\n            {errorMessage}\n          </p>\n        )\n      }\n\n      {\n        !isLoading && !errorMessage && goodsFromServer?.length === 0\n          && <p>There are no goods!</p>\n      }\n\n      {\n        !isLoading && !errorMessage && goodsFromServer\n          && goodsFromServer.length > 0\n            && <GoodsList goods={goodsFromServer} />\n      }\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}